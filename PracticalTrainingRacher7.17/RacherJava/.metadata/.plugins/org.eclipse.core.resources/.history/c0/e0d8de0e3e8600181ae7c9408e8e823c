import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.io.*;
import java.util.HashMap;
import java.util.*;
import javax.swing.filechooser.*;
import java.io.File;
public class ManagerWindow extends JFrame implements ActionListener{
	public static void main(String args[]){
	     new ManagerWindow();
	   }
   InputStudent inputBasicInfor;          
   ModifySituation modifyBasic;          
   Inquest basicSerPrint; 
   Delete basicDelete; 
   JMenuBar bar;
   JMenu fileMenu;
   JMenuItem input,modify,serPrint,delete,welcome; //关于学生的基本信息相关操作    
   HashMap<String,Student> basicInfor=null;                    
   File file=null;                             
   CardLayout card=null;                       
   JLabel label=null;                          
   JPanel pCenter;
   public ManagerWindow(){
     input =new JMenuItem("录入学生基本信息");
     modify=new JMenuItem("修改学生基本信息");
     serPrint=new JMenuItem("查询与打印学生基本信息");
     delete=new JMenuItem("删除学生基本信息");
     welcome=new JMenuItem("欢迎界面");
     bar=new JMenuBar();
     fileMenu=new JMenu("菜单选项");
     fileMenu.add(input);
     fileMenu.add(modify);
     fileMenu.add(serPrint);
     fileMenu.add(delete);
     fileMenu.add(welcome);
     bar.add(fileMenu);
     setJMenuBar(bar);
     label=new JLabel("学籍管理系统",JLabel.CENTER);
     label.setIcon(new ImageIcon("welcome.jpg"));
     label.setFont(new Font("隶书",Font.BOLD,36));
     label.setHorizontalTextPosition(SwingConstants.CENTER);
     label.setForeground(Color.red);
     basicInfor=new HashMap<String,Student>();
     input.addActionListener(this);
     modify.addActionListener(this);
     serPrint.addActionListener(this);
     delete.addActionListener(this);
     welcome.addActionListener(this);
     card=new CardLayout();
     pCenter=new JPanel();
     pCenter.setLayout(card); 
     file=new File("基本信息.txt");
     if(!file.exists()){
        try{
             FileOutputStream out=new FileOutputStream(file);
             ObjectOutputStream objectOut=new ObjectOutputStream(out);
             objectOut.writeObject(basicInfor);
             objectOut.close();
             out.close();
        }
        catch(IOException e){}
     } 
     InputStudent inputBasicInfor=  new InputStudent(file);
     //基本信息修改=new ModifySituation(file);
     //基本信息查询与打印=new Inquest(file);
     //基本信息删除=new Delete(file);
     pCenter.add("欢迎界面",label);
     //pCenter.add("录入界面",基本信息录入);
    //pCenter.add("修改界面",基本信息修改);
    // pCenter.add("删除界面",基本信息删除);
     add(pCenter,BorderLayout.CENTER);
     validate();
     setVisible(true);
     setBounds(100,50,460,280);
     setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
     addWindowListener(new WindowAdapter(){
                    public void windowClosing(WindowEvent e){
                      int n=JOptionPane.showConfirmDialog(null,"确认退出吗?","确认对话框",
                                               JOptionPane.YES_NO_OPTION );
                      if(n==JOptionPane.YES_OPTION)  
                         System.exit(0);
                    }});
     validate();   
   }
   public void actionPerformed(ActionEvent e){
     if(e.getSource()==input){
         //basicInfor.clearMess();
         card.show(pCenter,"录入界面");
     }
     else if(e.getSource()==modify){
         //基本信息修改.clearMess();
         card.show(pCenter,"修改界面");
     }
     else if(e.getSource()==serPrint){
         //基本信息查询与打印.clearMess();
         //基本信息查询与打印.setLocation(getBounds().x+getBounds().width,getBounds().y);
         //基本信息查询与打印.setVisible(true);
     }
     else if(e.getSource()==delete)
         card.show(pCenter,"删除界面");
     else if(e.getSource()==welcome)
         card.show(pCenter,"欢迎界面");
   }
}

class Student implements Serializable{
    String number,name,discipling,grade,borth,sex;
    File imagePic;
    public void setNumber(String number){
       this.number=number;
    }
    public String getNumber(){
       return number;
    }
    public void setName(String name){
       this.name=name;
    }
    public String getName(){
       return name;
    }
    public void setDiscipling(String discipling){
       this.discipling=discipling;
    }
    public String getDisciping(){
       return discipling;
    }
    public void setGrade(String grade){
       this.grade=grade;
    }
    public String getGrade(){
       return grade;
    }
    public void setBorth(String borth){
       this.borth=borth;
    }
    public String getBorth(){
       return borth;
    }
    public void setSex(String sex){
       this.sex=sex;
    }
    public String getSex(){
       return sex;
    }
    public void setImagePic(File image){
        imagePic=image;
    }
    public File getImagePic(){
        return imagePic;
    }
}

class StudentPicture extends JPanel{
   File imageFile;
   Toolkit tool;
   public StudentPicture(){
      tool=getToolkit();
   }
   public void setImage(File imageFile){
       this.imageFile=imageFile;
       repaint(); 
   }
   public void paintComponent(Graphics g){
      super.paintComponent(g);  
      int w=getBounds().width;
      int h=getBounds().height;
      if(imageFile!=null){
        Image image=tool.getImage(imageFile.getAbsolutePath()); 
        g.drawImage(image,0,0,w,h,this);
      }
      else
        g.drawString("没有选择照片图像",20,30); 
   } 
}
